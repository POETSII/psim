<?xml version="1.0"?>
<Graphs xmlns="https://poets-project.org/schemas/virtual-graph-schema-v2">
    <GraphType id="test">
        <Documentation>PSIM Test</Documentation>
        <MetaData>&quot;native_dimension&quot;:2</MetaData>
        <Properties/>

        <SharedCode>
            <![CDATA[
            ]]>
        </SharedCode>

        <MessageTypes>

            <MessageType id="__init__">
                <Documentation>Initialize state</Documentation>
            </MessageType>

            <MessageType id="message_type_a">
                <Documentation>Test Message (Type A)</Documentation>
                <Message>
                    <Scalar type="uint32_t" name="value">
                        <Documentation>Test Value</Documentation>
                    </Scalar>
                </Message>
            </MessageType>

            <MessageType id="message_type_b">
                <Documentation>Test Message (Type B)</Documentation>
                <Message>
                    <Scalar type="uint32_t" name="value">
                        <Documentation>Test Value</Documentation>
                    </Scalar>
                </Message>
            </MessageType>

        </MessageTypes>

        <DeviceTypes>

            <DeviceType id="device_type_x">
                <Properties>
                    <Scalar name="id" type="uint32_t"></Scalar>
                </Properties>
                <State>
                    <Scalar name="counter" type="uint32_t"></Scalar>
                    <Scalar name="rts" type="uint32_t"></Scalar>
                </State>
                <ReadyToSend>
                    <![CDATA[
                    rts = deviceState->rts;
                    ]]>
                </ReadyToSend>
                <InputPin messageTypeId="__init__" name="__init__">
                    <OnReceive>
                        <![CDATA[
                        deviceState->counter = 0;
                        deviceState->rts = 1;
                        ]]>
                    </OnReceive>
                </InputPin>
                <InputPin messageTypeId="message_type_b" name="input">
                    <OnReceive>
                        <![CDATA[
                        message->value = deviceState->counter;
                        handler_log(1, "Received message (value = %d)", message->value);
                        deviceState->rts = deviceState->counter < 10;
                        if (deviceState->counter >= 10)
                            handler_exit(0); // return successfully
                        ]]>
                    </OnReceive>
                </InputPin>
                <OutputPin messageTypeId="message_type_a" name="output">
                    <OnSend>
                        <![CDATA[
                        deviceState->counter++;
                        message->value = deviceState->counter;
                        handler_log(1, "Sending message (value = %d)", message->value);
                        deviceState->rts = 0;
                        ]]>
                    </OnSend>
                </OutputPin>
            </DeviceType>

            <DeviceType id="device_type_y">
                <Properties>
                    <Scalar name="id" type="uint32_t"></Scalar>
                </Properties>
                <State>
                    <Scalar name="counter" type="uint32_t"></Scalar>
                    <Scalar name="rts" type="uint32_t"></Scalar>
                </State>
                <ReadyToSend>
                    <![CDATA[
                    rts = deviceState->rts;
                    ]]>
                </ReadyToSend>
                <InputPin messageTypeId="__init__" name="__init__">
                    <OnReceive>
                        <![CDATA[
                        deviceState->counter = 0;
                        deviceState->rts = 0;
                        ]]>
                    </OnReceive>
                </InputPin>
                <InputPin messageTypeId="message_type_a" name="input">
                    <OnReceive>
                        <![CDATA[
                        deviceState->rts = 1;
                        deviceState->counter = message->value;
                        handler_log(1, "Received message (value = %d)", message->value);
                        ]]>
                    </OnReceive>
                </InputPin>
                <OutputPin messageTypeId="message_type_b" name="output">
                    <OnSend>
                        <![CDATA[
                        message->value = deviceState->counter;
                        deviceState->rts = 0;
                        handler_log(1, "Sending message (value = %d)", message->value);
                        message->value = deviceState->counter;
                        ]]>
                    </OnSend>
                </OutputPin>
            </DeviceType>


        </DeviceTypes>
    </GraphType>
    <GraphInstance id="graph1" graphTypeId="test">
      <DeviceInstances>
          <DevI id="device0" type="device_type_x"><P>"id": 0</P></DevI>
          <DevI id="device1" type="device_type_y"><P>"id": 1</P></DevI>
      </DeviceInstances>
      <EdgeInstances>
        <EdgeI path="device1:input-device0:output"/>
        <EdgeI path="device0:input-device1:output"/>
    </EdgeInstances>
</GraphInstance>
</Graphs>
